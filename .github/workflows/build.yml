---
name: Build

on: [push, pull_request]

jobs:

  get_implementations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: List implementations
        id: set-matrix
        run: echo "::set-output name=matrix::$(cd implementations && ls -1"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test_implementations:
    name: ${{ matrix.platform }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    needs: get_implementations

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.9]
        implementation: ${{ needs.get_implementations.outputs.matrix }}
        zarr-python: [released, pre]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v1
        with:
          auto-update-conda: true
          channels: conda-forge,ome
          environment-file: ${{ matrix.implementation }}/environment.yml
          python-version: ${{ matrix.python-version }}
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Install zarr dev (optional)
        shell: bash -l {0}
        if: ${{ matrix.config.zarr-python == 'pre' }}
        run: |
          python -m pip install git+https://github.com/zarr-developers/zarr-python.git

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests
        shell: bash -l {0}
        run: make ${{ matrix.implementation }}
